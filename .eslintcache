[{"C:\\Users\\George\\Documents\\KEA\\Sem3\\Programming\\Projects\\Websites2 - frontend\\w2frontend\\src\\components\\products\\BuyProduct.jsx":"1","C:\\Users\\George\\Documents\\KEA\\Sem3\\Programming\\Projects\\Websites2 - frontend\\w2frontend\\src\\App.js":"2","C:\\Users\\George\\Documents\\KEA\\Sem3\\Programming\\Projects\\Websites2 - frontend\\w2frontend\\src\\index.js":"3","C:\\Users\\George\\Documents\\KEA\\Sem3\\Programming\\Projects\\Websites2 - frontend\\w2frontend\\src\\components\\products\\AddProduct.jsx":"4","C:\\Users\\George\\Documents\\KEA\\Sem3\\Programming\\Projects\\Websites2 - frontend\\w2frontend\\src\\components\\products\\ProductList.jsx":"5","C:\\Users\\George\\Documents\\KEA\\Sem3\\Programming\\Projects\\Websites2 - frontend\\w2frontend\\src\\components\\Navbar.jsx":"6","C:\\Users\\George\\Documents\\KEA\\Sem3\\Programming\\Projects\\Websites2 - frontend\\w2frontend\\src\\http-common.js":"7","C:\\Users\\George\\Documents\\KEA\\Sem3\\Programming\\Projects\\Websites2 - frontend\\w2frontend\\src\\service\\ProductService.js":"8","C:\\Users\\George\\Documents\\KEA\\Sem3\\Programming\\Projects\\Websites2 - frontend\\w2frontend\\src\\service\\OrderService.js":"9","C:\\Users\\George\\Documents\\KEA\\Sem3\\Programming\\Projects\\Websites2 - frontend\\w2frontend\\src\\service\\CustomerService.js":"10","C:\\Users\\George\\Documents\\KEA\\Sem3\\Programming\\Projects\\Websites2 - frontend\\w2frontend\\src\\components\\products\\EditProduct.jsx":"11"},{"size":4881,"mtime":1607528704217,"results":"12","hashOfConfig":"13"},{"size":1568,"mtime":1607528704216,"results":"14","hashOfConfig":"13"},{"size":544,"mtime":1606406352008,"results":"15","hashOfConfig":"13"},{"size":5877,"mtime":1607375856634,"results":"16","hashOfConfig":"13"},{"size":8549,"mtime":1607524481004,"results":"17","hashOfConfig":"13"},{"size":1656,"mtime":1608136338949,"results":"18","hashOfConfig":"13"},{"size":179,"mtime":1606404624513,"results":"19","hashOfConfig":"13"},{"size":1168,"mtime":1607375175060,"results":"20","hashOfConfig":"13"},{"size":1208,"mtime":1607528704218,"results":"21","hashOfConfig":"13"},{"size":1003,"mtime":1607528704218,"results":"22","hashOfConfig":"13"},{"size":6541,"mtime":1607375856615,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"v06nz3",{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"27"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\George\\Documents\\KEA\\Sem3\\Programming\\Projects\\Websites2 - frontend\\w2frontend\\src\\components\\products\\BuyProduct.jsx",["49"],"import React, {Component} from \"react\";\r\nimport OrderService from \"../../service/OrderService\";\r\nimport CustomerService from \"../../service/CustomerService\";\r\nimport http from \"../../http-common\";\r\n\r\nclass BuyProduct extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onChangeEmail = this.onChangeEmail.bind(this);\r\n        this.onChangeFirstName = this.onChangeFirstName.bind(this);\r\n        this.onChangeLastName = this.onChangeLastName.bind(this);\r\n\r\n        this.state = {\r\n            message: \"\",\r\n            customersId: null,\r\n            customerData: {\r\n                email: \"\",\r\n                firstName: \"\",\r\n                lastName: \"\",\r\n            }\r\n        }\r\n        this.setupOrder = this.setupOrder.bind(this);\r\n        this.saveOrder = this.saveOrder.bind(this);\r\n    }\r\n\r\n\r\n    onChangeEmail(e) {\r\n        let newOrderState = this.state.customerData;\r\n        newOrderState.email = e.target.value;\r\n        this.setState({\r\n            customerData : newOrderState\r\n        })\r\n    }\r\n\r\n    onChangeFirstName(e) {\r\n        let newOrderState = this.state.customerData;\r\n        newOrderState.firstName = e.target.value;\r\n        this.setState({\r\n            customerData : newOrderState\r\n        })\r\n    }\r\n\r\n    onChangeLastName(e) {\r\n        let newOrderState = this.state.customerData;\r\n        newOrderState.lastName = e.target.value;\r\n        this.setState({\r\n            customerData : newOrderState\r\n        })\r\n    }\r\n\r\n\r\n    setupOrder() {\r\n        let customerData = this.state.customerData;\r\n        console.log(customerData)\r\n        CustomerService\r\n            .create(customerData)\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                //console.log(customerData);\r\n                this.setState({ customersId : response.data.id}, function() {this.saveOrder();})\r\n            })\r\n            .catch((e)=> {\r\n                console.log(e);\r\n            })\r\n    }\r\n\r\n    saveOrder(){\r\n        console.log(this.state.customersId)\r\n        let orderData = {\r\n            customersId: this.state.customersId,\r\n            productsId: this.props.match.params.id\r\n        }\r\n\r\n        console.log(orderData)\r\n\r\n        OrderService\r\n            .create(orderData)\r\n            .then(() => {\r\n                this.setState({\r\n                    message: \"Order successfully added\"\r\n                })\r\n                window.scrollTo(0,0);\r\n            })\r\n            .catch((e) => {\r\n                console.log(e);\r\n            })\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container bg-secondary container-sm\">\r\n                {\r\n                    this.state.message !== \"\" ?\r\n                        (<div className=\"row-cols-1 pt-3 text-center\">\r\n                            <div className=\"alert alert-danger pt-2\" role=\"alert\">\r\n                                {this.state.message}\r\n                            </div>\r\n                        </div>) : (\r\n                            console.log(\"Not added yet\")\r\n                        )\r\n                }\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                    </div>\r\n                    <div className=\"col col-lg-8\">\r\n                        <form onSubmit={(e => e.preventDefault())}>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"email\">Email</label>\r\n                                <input className=\"form-control\" type=\"text\" id=\"email\" placeholder=\"\"\r\n                                       onChange={this.onChangeEmail} required/>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"first-name\">First Name</label>\r\n                                <input className=\"form-control\" type=\"text\" id=\"first-name\" placeholder=\"\"\r\n                                       onChange={this.onChangeFirstName} required/>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"last-name\">Last Name</label>\r\n                                <input className=\"form-control\" type=\"text\" id=\"last-name\" placeholder=\"\"\r\n                                       onChange={this.onChangeLastName} required/>\r\n                            </div>\r\n\r\n                            <div className=\"form-group text-center\">\r\n                                <button className=\"btn btn-dark btn-lg\" onClick={this.setupOrder}>Purchase</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BuyProduct;",["50","51"],"C:\\Users\\George\\Documents\\KEA\\Sem3\\Programming\\Projects\\Websites2 - frontend\\w2frontend\\src\\App.js",["52"],"C:\\Users\\George\\Documents\\KEA\\Sem3\\Programming\\Projects\\Websites2 - frontend\\w2frontend\\src\\index.js",[],"C:\\Users\\George\\Documents\\KEA\\Sem3\\Programming\\Projects\\Websites2 - frontend\\w2frontend\\src\\components\\products\\AddProduct.jsx",[],"C:\\Users\\George\\Documents\\KEA\\Sem3\\Programming\\Projects\\Websites2 - frontend\\w2frontend\\src\\components\\products\\ProductList.jsx",["53"],"import React, {Component} from \"react\";\r\nimport ProductService from \"../../service/ProductService\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nclass ProductList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.getProducts = this.getProducts.bind(this);\r\n        this.deleteProduct = this.deleteProduct.bind(this);\r\n        this.getProductsComplex = this.getProductsComplex.bind(this);\r\n        this.onChangeSearchTerm = this.onChangeSearchTerm.bind(this);\r\n        this.onChangeSortingDirection = this.onChangeSortingDirection.bind(this);\r\n        this.search = this.search.bind(this);\r\n        this.changePage = this.changePage.bind(this);\r\n\r\n        this.state = {\r\n            searchTerm : \"\",\r\n            currentPage: 0,\r\n            totalPages : 0,\r\n            sortDirection : \"asc\",\r\n            products: [],\r\n            message: \"\"\r\n        }\r\n    }\r\n\r\n    //Method for retrieving all products\r\n    getProducts() {\r\n        ProductService.getAll()\r\n            .then(response => {\r\n                this.setState({\r\n                    products: response.data\r\n                });\r\n                console.log(response.data); //for testing\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            })\r\n    }\r\n\r\n    //Retreiving products with pagination, filtering and sorting\r\n    getProductsComplex(pPerPage, pageNr, searchTerm, sortDirection) {\r\n        ProductService.getAllComplex(pPerPage, pageNr, searchTerm, sortDirection)\r\n            .then(response => {\r\n                this.setState({\r\n                    searchTerm: searchTerm,\r\n                    products: response.data,\r\n                    currentPage: pageNr,\r\n                    sortDirection: sortDirection,\r\n                    totalPages: response.headers[\"page-total\"]\r\n                })\r\n                console.log(response.data);\r\n                console.log(response.headers);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            })\r\n    }\r\n\r\n    changePage(increment) {\r\n        this.getProductsComplex(4, this.state.currentPage + increment,\r\n            this.state.searchTerm, this.state.sortDirection);\r\n    }\r\n\r\n    componentDidMount() {\r\n       // this.getProducts();\r\n        this.getProductsComplex(4,0, this.state.searchTerm, this.state.sortDirection);\r\n    }\r\n\r\n    search() {\r\n        this.getProductsComplex(4,0,this.state.searchTerm, this.state.sortDirection);\r\n    }\r\n\r\n    onChangeSearchTerm(e) {\r\n        const newSearchTerm = e.target.value;\r\n        this.setState({\r\n            searchTerm:  newSearchTerm,\r\n        });\r\n    }\r\n\r\n    onChangeSortingDirection(e) {\r\n        const newSortingDirection = e.target.value;\r\n        this.setState({\r\n            sortDirection:  newSortingDirection,\r\n        });\r\n    }\r\n\r\n    deleteProduct(id) {\r\n        console.log(\"Delete \" + id)\r\n        ProductService\r\n            .delete(id)\r\n            .then(() => {\r\n                this.setState({\r\n                    message: \"Product deleted successfully\"\r\n                })\r\n                this.refreshList();\r\n                window.scrollTo(0,0);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            })\r\n    }\r\n\r\n    refreshList() {\r\n        this.getProducts();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const products = this.state.products;\r\n        return (\r\n            <div className=\"container-fluid bg-secondary p-0\" >\r\n                <div className=\"row-cols-1\">\r\n                    <nav className=\"navbar navbar-dark bg-dark\">\r\n                        <form className=\"form-inline\" onSubmit={(e => e.preventDefault())}>\r\n                            <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\"\r\n                                   aria-label=\"Search\" onChange={this.onChangeSearchTerm}/>\r\n\r\n                                <select className=\"form-control mr-sm-2\" id=\"productsPerPage\" onChange={this.onChangeSortingDirection}>\r\n                                    <option value=\"\">Sort price</option>\r\n                                    <option value=\"asc\">Asc</option>\r\n                                    <option value=\"desc\">Desc</option>\r\n                                </select>\r\n                                <button className=\"btn btn-outline-danger mr-sm-2\" onClick={this.search} type=\"submit\">Search</button>\r\n\r\n                                <button\r\n                                    className=\"btn btn-outline-danger mr-sm-2\"\r\n                                    type=\"button\"\r\n                                    onClick={() => this.changePage(-1)}\r\n                                    disabled={this.state.currentPage === 0 ? (\"disabled\") : (\"\")}\r\n                                >\r\n                                    Previous\r\n                                </button>\r\n                                <h5><span className=\"badge badge-secondary mr-sm-2\">{`${this.state.currentPage + 1} of ${this.state.totalPages}`}</span></h5>\r\n                                <button\r\n                                    className=\"btn btn-outline-danger mr-sm-2\"\r\n                                    type=\"button\"\r\n                                    disabled={this.state.currentPage < this.state.totalPages - 1 ? (\"\") : (\"disabled\")}\r\n                                    onClick={() => this.changePage(1)}\r\n                                >\r\n                                    Next\r\n                                </button>\r\n                        </form>\r\n                    </nav>\r\n                </div>\r\n                {\r\n                    this.state.message !== \"\" ?\r\n                        (<div className=\"row-cols-1 pt-3 text-center\">\r\n                            <div className=\"alert alert-danger pt-2\" role=\"alert\">\r\n                                {this.state.message}\r\n                            </div>\r\n                        </div>) : (\r\n                            console.log(\"No delete\")\r\n                        )\r\n                }\r\n                <div className=\"row-cols-1 pt-1 mb-2 text-center\">\r\n                    <Link\r\n                        to={\"/products/add\"}\r\n                        className=\"btn btn-dark btn-outline-danger btn-lg text-center\"\r\n                    >\r\n                        Add a product\r\n                    </Link>\r\n                </div>\r\n                <div className=\"row d-flex\">\r\n                    <div className={\"col-md-auto mx-auto\"}>\r\n                        <ul className=\"list-unstyled row\">\r\n                            {products.map((product) => {\r\n                                return <div key={product.id} className=\"card my-5 list-item mx-auto\" style={{width: \"35rem\"}}>\r\n                                    <img className=\"card-img-top\" src={product.imgUrl} alt=\"AddProduct image\"/>\r\n                                    <div className=\"card-body text-center\">\r\n                                        <h4 className=\"card-title\">{product.name}</h4>\r\n                                        <h5 style={{fontStyle: \"italic\"}}>{product.price} kr<br/>Type: {product.type}</h5>\r\n                                        <p className=\"card-text\">{product.description}</p>\r\n                                        <Link\r\n                                            to={\"/buy/\" + product.id}\r\n                                            className=\"btn btn-secondary btn-lg\"\r\n                                        >\r\n                                            Buy\r\n                                        </Link>\r\n                                        <Link\r\n                                            to={\"/products/\" + product.id}\r\n                                            className=\"btn btn-danger btn-lg\"\r\n                                        >\r\n                                            Edit\r\n                                        </Link>\r\n                                        <button type=\"submit\" className=\"btn btn-dark btn-lg\"\r\n                                                onClick={(e)=> {\r\n                                                    this.deleteProduct(product.id);\r\n                                                }}>Delete\r\n                                        </button>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default ProductList;\r\n","C:\\Users\\George\\Documents\\KEA\\Sem3\\Programming\\Projects\\Websites2 - frontend\\w2frontend\\src\\components\\Navbar.jsx",[],"C:\\Users\\George\\Documents\\KEA\\Sem3\\Programming\\Projects\\Websites2 - frontend\\w2frontend\\src\\http-common.js",[],"C:\\Users\\George\\Documents\\KEA\\Sem3\\Programming\\Projects\\Websites2 - frontend\\w2frontend\\src\\service\\ProductService.js",[],"C:\\Users\\George\\Documents\\KEA\\Sem3\\Programming\\Projects\\Websites2 - frontend\\w2frontend\\src\\service\\OrderService.js",[],"C:\\Users\\George\\Documents\\KEA\\Sem3\\Programming\\Projects\\Websites2 - frontend\\w2frontend\\src\\service\\CustomerService.js",[],"C:\\Users\\George\\Documents\\KEA\\Sem3\\Programming\\Projects\\Websites2 - frontend\\w2frontend\\src\\components\\products\\EditProduct.jsx",[],{"ruleId":"54","severity":1,"message":"55","line":4,"column":8,"nodeType":"56","messageId":"57","endLine":4,"endColumn":12},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"54","severity":1,"message":"62","line":3,"column":50,"nodeType":"56","messageId":"57","endLine":3,"endColumn":54},{"ruleId":"63","severity":1,"message":"64","line":171,"column":37,"nodeType":"65","endLine":171,"endColumn":112},"no-unused-vars","'http' is defined but never used.","Identifier","unusedVar","no-native-reassign",["66"],"no-negated-in-lhs",["67"],"'Link' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]